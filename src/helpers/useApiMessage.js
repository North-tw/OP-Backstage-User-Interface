const errorMessage = {
  '204-1': '0筆資料更新',
  '400-0': '應輸入資料未輸入。',
  '400-1': '必填欄位未輸入。',
  '400-2': '欄位格式不符。',
  '400-3': '欄位輸入長度不符。',
  '400-4': '必填欄位不符合欄位邏輯。',
  '400-5': '原密碼輸入錯誤。',
  '400-6': '資料不完整或不正確。資料異動受參照限制。',
  '400-7': 'SQL語法有誤。',
  '400-8': '使用者刪除失敗，找不到使用者編號。',
  '400-9': '加解密失敗，找不到金鑰。',
  '400-10': '批次新增使用者失敗；重複的使用者帳號。',
  '400-11': '批次新增群組失敗；重複的群組代碼。',
  '400-12': '遊戲種類刪除失敗，找不到遊戲代碼。',
  '400-13': '新增遊戲種類失敗，遊戲種類代碼不能為空值。',
  '400-14': '批次新增遊戲種類失敗，重複的遊戲名稱。',
  '400-15': '批次新增遊戲種類失敗，重複的遊戲種類代碼。',
  '400-16': '遊戲場地刪除失敗，找不到遊戲代碼。',
  '400-17': '新增遊戲場地失敗，遊戲場地代碼不能為空值。',
  '400-18': '批次新增遊戲場地失敗；重複的遊戲場地名稱。',
  '400-19': '批次新增遊戲場地失敗；重複的遊戲場地代碼。',
  '400-20': '遊戲種類代碼或名稱已存在。',
  '400-21': '遊戲種類名稱已存在。',
  '400-22': '遊戲場地代碼或名稱已存在。',
  '400-23': '遊戲場地名稱已存在。',
  '400-24': '發送群組代碼或名稱已存在。',
  '400-25': '新增發送群組資訊失敗，發送群組代碼不能為空值。',
  '400-26': '批次新增發送群組資訊失敗，重複的發送群組名稱。',
  '400-27': '批次新增發送群組資訊失敗，重複的發送群組代碼。',
  '400-28': '發送群組名稱已存在。',
  '400-29': '發送群組資訊刪除失敗，找不到發送群組代碼。',
  '400-30': '發送群組發送的URL已存在。',
  '400-31': '發送群組發送的URL重複輸入。',
  '400-32': '發送群組發送的URL資訊刪除失敗，找不到代碼。',
  '400-33': '發送群組發送的URL資訊刪除失敗，找不到發送群組資訊代碼。',
  '400-34': '桌號已存在。',
  '400-35': '批次新增遊戲桌失敗，重複的桌號。',
  '400-36': '遊戲桌資訊刪除失敗，找不到桌號。',
  '400-37': '遊戲桌與發送列表新增失敗，找不到桌號。',
  '400-38': '遊戲桌與發送列表新增失敗，找不到發送群組代碼。',
  '400-39': '遊戲桌與發送列表新增失敗，資料已存在。',
  '400-40': '遊戲桌與發送列表批次新增失敗，有桌號不存在。',
  '400-41': '遊戲桌與發送列表批次新增失敗，有發送群組代碼不存在。',
  '400-42': '遊戲桌與發送列表批次新增失敗，資料已存在。',
  '400-43': '找不到要發送的URL。',
  '400-44': '建立發送URL失敗，找不到發送群組序號。',
  '400-45': '找不到遊戲桌號與發送群組代碼。',
  '400-46': '找不到遊戲桌號。',
  '400-47': '找不到發送群組代碼。',
  '400-48': 'proxy server profile刪除失敗，沒有輸入流水號。',
  '400-49': 'proxy server profile更新失敗，沒有輸入流水號。',
  '400-50': 'proxy server profile取得資訊失敗，沒有輸入流水號。',
  '400-51': 'proxy server profile的ip必須符合IPv4格式。',
  '400-52': 'proxy server profile的port必須是數字。',
  '400-53': 'proxy server profile的port必須在1~65535之間。',
  '400-54': '遊戲桌的代理連線host必須符合IPv4格式。',
  '400-55': '遊戲桌的代理連線的port必須是數字。',
  '400-56': '遊戲桌的代理連線的port必須在1~65535之間。',
  '401-0': '未經存取授權。',
  '401-1': '未經存取授權，找不到API Token。',
  '401-2': '拒絕存取授權，API Token格式錯誤。',
  '401-3': '拒絕存取授權，API Token宣告錯誤。',
  '401-4': '拒絕存取授權，驗證失敗，密碼錯誤。',
  '401-5': '拒絕存取授權，使用者為null值。',
  '403-0': '拒絕存取授權。',
  '403-1': '帳號尚未啟用，請先啟用。',
  '403-2': '本帳號已被管理者停權。',
  '403-3': '拒絕存取授權，API Token已失效。',
  '403-4': '拒絕存取授權，API Token格式錯誤。',
  '403-5': '拒絕存取授權，API Token宣告錯誤。',
  '403-6': '拒絕存取授權，API Token錯誤。',
  '404-0': 'Request URL無法找到對應資源。',
  '404-1': '查無資料。',
  '404-2': '帳號不存在。',
  '409-1': '資料新增失敗。',
  '409-2': '資料更新失敗。',
  '409-3': '資料未更新。',
  '409-4': '資料刪除失敗。',
  '409-5': '未刪除任何資料。',
  '409-6': '管理群組建立失敗。群組代碼已存在。',
  '409-7': '管理群組建立失敗。',
  '409-8': '管理群組批次建立失敗。',
  '409-9': '管理群組更新失敗。',
  '409-10': '帳號建立失敗。',
  '409-11': '帳號批次建立失敗。',
  '409-12': '帳號刪除失敗。',
  '409-13': '帳號權限狀態更新失敗。',
  '409-14': '帳號資訊更新失敗。',
  '409-15': '密碼重設失敗。',
  '409-16': '使用者帳號已存在。',
  '409-17': '遊戲種類建立失敗。',
  '409-18': '遊戲種類批次建立失敗。',
  '409-19': '遊戲場地建立失敗。',
  '409-20': '遊戲場地批次建立失敗。',
  '409-21': '遊戲種類更新失敗。',
  '409-22': '遊戲場地更新失敗。',
  '409-23': '重複的Key值。',
  '409-24': '發送群組資訊建立失敗。',
  '409-25': '發送群組資訊批次建立失敗。',
  '409-26': '發送群組資訊更新失敗。',
  '409-27': '發送群組發送的URL建立失敗。',
  '409-28': '發送群組發送的URL批次建立失敗。',
  '409-29': '發送群組發送的URL資訊更新失敗。',
  '409-30': '遊戲桌建立失敗。',
  '409-31': '遊戲桌批次建立失敗。',
  '409-32': '遊戲桌資訊更新失敗。',
  '409-33': '遊戲桌與發送發送群組建立失敗。',
  '409-34': '遊戲桌與發送發送群組批次建立失敗。',
  '409-35': '遊戲桌與發送發送群組資訊更新失敗。',
  '409-36': 'proxy server profile建立失敗。',
  '409-37': 'proxy server profile資訊更新失敗。',
  '500-0': '系統錯誤程式碼。',
  '500-1': '無法進入資料資料庫。',
  '500-2': '加解密機制發生系統錯誤。',
  '500-3': '加解密機制錯誤，無法使用演算法。',
  '500-4': '加解密機制錯誤，加解密用金鑰格式或值有誤。',
  '500-5': '加解密機制錯誤，提供給密碼區塊的資料有誤。',
  '500-6': '加解密機制錯誤，位元補充有誤。',
  '500-7': '排程建立失敗，Server錯誤:',
  '500-8': '排程更新失敗，Server錯誤:',
  '500-9': '排程刪除失敗，Server錯誤:',
  '500-10': '無法連線到指定資源。',
  '502-0': 'Request無法與伺服器連線。',
  '503-0': '目前伺服器無法處理Request。'
}

const getErrorCode = (response) => {
  return response.data.errMsg.includes(':') ? response.data.errMsg.split(':')[0] : ''
}

const isResponseSuccess = (response) => {
  const code = Number(response?.data?.code)
  return code >= 200 && code < 300
}

const getErrorMessage = (response) => {
  if (!isResponseSuccess(response)) {
    const errorCode = getErrorCode(response)
    if (errorMessage[errorCode]) {
      return errorMessage[errorCode]
    } else if (response.data.errMsg && response.data.errMsg.includes(':')) {
      return response.data.errMsg.split(':')[1]
    } else if (response.data.errMsg) {
      return response.data.errMsg
    } else {
      switch (response.config.method) {
        case 'put':
          return '更新失敗'
        case 'delete':
          return '刪除失敗'
        case 'post':
        default:
          return '新增失敗'
      }
    }
  }
}

const getSuccessMessage = (response) => {
  switch (response.config.method) {
    case 'put':
      return '更新成功'
    case 'delete':
      return '刪除成功'
    case 'post':
    default:
      return '新增成功'
  }
}

const useErrorMessage = () => {
  return {
    getErrorCode,
    isResponseSuccess,
    getErrorMessage,
    getSuccessMessage
  }
}

export {
  useErrorMessage
}
